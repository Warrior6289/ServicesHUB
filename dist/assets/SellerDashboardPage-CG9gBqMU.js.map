{"version":3,"file":"SellerDashboardPage-CG9gBqMU.js","sources":["../../src/components/ListingCard.tsx","../../src/components/ListingForm.tsx","../../src/hooks/useServiceRequestPolling.ts","../../src/api/serviceRequests.ts","../../src/components/SellerProfileForm.tsx","../../src/components/SellerStats.tsx","../../src/pages/SellerDashboardPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { RatingBlock } from './RatingBlock';\r\n\r\nexport type Listing = {\r\n  id: string;\r\n  title: string;\r\n  price: number;\r\n  status: 'available' | 'sold';\r\n  views: number;\r\n  rating: number;\r\n  description?: string;\r\n};\r\n\r\ntype ListingCardProps = {\r\n  listing: Listing;\r\n  onToggleStatus: (id: string) => void;\r\n  onEdit: (id: string) => void;\r\n  onRemove: (id: string) => void;\r\n};\r\n\r\nexport const ListingCard: React.FC<ListingCardProps> = ({ listing, onToggleStatus, onEdit, onRemove }) => {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 8 }}\r\n      whileInView={{ opacity: 1, y: 0 }}\r\n      viewport={{ once: true }}\r\n      transition={{ duration: 0.25 }}\r\n      className=\"group rounded-xl border border-slate-200 p-4 hover:shadow-lg hover:-translate-y-0.5 transition-all duration-200 dark:border-slate-700\"\r\n    >\r\n      <div className=\"flex items-start justify-between gap-3\">\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold\">{listing.title}</h3>\r\n          <p className=\"text-sm text-slate-600 dark:text-slate-300\">{listing.description}</p>\r\n          <div className=\"mt-2 flex items-center gap-3 text-sm\">\r\n            <span className=\"inline-flex items-center rounded-full bg-slate-100 px-2 py-0.5 dark:bg-slate-800\">Views: {listing.views}</span>\r\n            <span className={`inline-flex items-center rounded-full px-2 py-0.5 ${listing.status === 'available' ? 'bg-green-100 text-green-800' : 'bg-amber-100 text-amber-800'}`}>{listing.status}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-right\">\r\n          <p className=\"text-lg font-semibold\">${listing.price.toFixed(2)}</p>\r\n          <div className=\"mt-1\"><RatingBlock rating={listing.rating} /></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-4 flex flex-wrap gap-2\">\r\n        <button className=\"rounded-md border px-3 py-1.5 text-sm hover:bg-slate-50 dark:hover:bg-slate-800\" onClick={() => onToggleStatus(listing.id)}>\r\n          Mark {listing.status === 'available' ? 'as Sold' : 'as Available'}\r\n        </button>\r\n        <button className=\"rounded-md border px-3 py-1.5 text-sm hover:bg-slate-50 dark:hover:bg-slate-800\" onClick={() => onEdit(listing.id)}>Edit</button>\r\n        <button className=\"rounded-md bg-red-600 px-3 py-1.5 text-sm text-white hover:bg-red-700\" onClick={() => onRemove(listing.id)}>Remove</button>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nexport type ListingFormValues = {\r\n  title: string;\r\n  price: number;\r\n  description?: string;\r\n};\r\n\r\ntype ListingFormProps = {\r\n  initial?: ListingFormValues;\r\n  onSubmit?: (values: ListingFormValues) => void;\r\n};\r\n\r\nexport const ListingForm: React.FC<ListingFormProps> = ({ initial, onSubmit }) => {\r\n  const { register, handleSubmit, formState: { isSubmitting } } = useForm<ListingFormValues>({\r\n    defaultValues: initial ?? { title: '', price: 0, description: '' },\r\n  });\r\n\r\n  const submit = async (values: ListingFormValues) => {\r\n    await new Promise((r) => setTimeout(r, 400));\r\n    onSubmit?.(values);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)} className=\"space-y-4\">\r\n      <div>\r\n        <label className=\"block text-sm font-medium\">Title</label>\r\n        <input {...register('title')} className=\"mt-1 w-full rounded-md border border-slate-300 bg-white px-3 py-2 text-slate-900 placeholder-slate-400 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-1 focus:ring-primary-500 dark:border-slate-700 dark:bg-slate-800 dark:text-slate-100\" />\r\n      </div>\r\n      <div>\r\n        <label className=\"block text-sm font-medium\">Price</label>\r\n        <input type=\"number\" step=\"0.01\" {...register('price', { valueAsNumber: true })} className=\"mt-1 w-full rounded-md border border-slate-300 bg-white px-3 py-2 text-slate-900 placeholder-slate-400 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-1 focus:ring-primary-500 dark:border-slate-700 dark:bg-slate-800 dark:text-slate-100\" />\r\n      </div>\r\n      <div>\r\n        <label className=\"block text-sm font-medium\">Description</label>\r\n        <textarea rows={3} {...register('description')} className=\"mt-1 w-full rounded-md border border-slate-300 bg-white px-3 py-2 text-slate-900 placeholder-slate-400 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-1 focus:ring-primary-500 dark:border-slate-700 dark:bg-slate-800 dark:text-slate-100\" />\r\n      </div>\r\n      <button type=\"submit\" disabled={isSubmitting} className=\"inline-flex items-center justify-center rounded-md bg-primary-600 px-4 py-2 text-white hover:bg-primary-700 disabled:opacity-70\">Save Listing</button>\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\n","import { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { getNearbyInstantRequests } from '../api/serviceRequests';\r\nimport type { ServiceRequest } from '../types/serviceRequest';\r\nimport { getMockInstantRequests } from '../mocks/serviceRequests';\r\n\r\ntype UseServiceRequestPollingOptions = {\r\n  enabled: boolean;\r\n  intervalMs?: number;\r\n  radius?: number;\r\n  categoryId?: string;\r\n  useMockData?: boolean;\r\n};\r\n\r\nexport function useServiceRequestPolling({\r\n  enabled,\r\n  intervalMs = 20000, // 20 seconds default\r\n  radius = 50,\r\n  categoryId,\r\n  useMockData = true, // Use mock data by default during development\r\n}: UseServiceRequestPollingOptions) {\r\n  const [requests, setRequests] = useState<ServiceRequest[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<Error | null>(null);\r\n  const [newRequestsCount, setNewRequestsCount] = useState(0);\r\n  \r\n  const previousRequestIdsRef = useRef<Set<string>>(new Set());\r\n  const intervalRef = useRef<ReturnType<typeof setInterval> | null>(null);\r\n\r\n  const fetchRequests = useCallback(async () => {\r\n    if (!enabled) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      let data: ServiceRequest[];\r\n      \r\n      if (useMockData) {\r\n        // Use mock data during development\r\n        data = getMockInstantRequests();\r\n      } else {\r\n        // Use real API\r\n        data = await getNearbyInstantRequests(radius, categoryId);\r\n      }\r\n\r\n      // Check for new requests\r\n      const currentIds = new Set(data.map(r => r.id));\r\n      const previousIds = previousRequestIdsRef.current;\r\n      \r\n      const newIds = Array.from(currentIds).filter(id => !previousIds.has(id));\r\n      \r\n      if (newIds.length > 0 && previousIds.size > 0) {\r\n        setNewRequestsCount(prev => prev + newIds.length);\r\n        \r\n        // Show browser notification if permission granted\r\n        if ('Notification' in window && Notification.permission === 'granted') {\r\n          new Notification('New Service Request!', {\r\n            body: `${newIds.length} new request(s) available`,\r\n            icon: '/vite.svg',\r\n          });\r\n        }\r\n        \r\n        // Play sound (optional)\r\n        // const audio = new Audio('/notification.mp3');\r\n        // audio.play().catch(() => {});\r\n      }\r\n\r\n      previousRequestIdsRef.current = currentIds;\r\n      setRequests(data);\r\n    } catch (err) {\r\n      // Handle requests polling error\r\n      setError(err as Error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [enabled, radius, categoryId, useMockData]);\r\n\r\n  const refetch = useCallback(() => {\r\n    fetchRequests();\r\n  }, [fetchRequests]);\r\n\r\n  const resetNewRequestsCount = useCallback(() => {\r\n    setNewRequestsCount(0);\r\n  }, []);\r\n\r\n  // Initial fetch\r\n  useEffect(() => {\r\n    if (enabled) {\r\n      fetchRequests();\r\n    }\r\n  }, [enabled, fetchRequests]);\r\n\r\n  // Set up polling interval\r\n  useEffect(() => {\r\n    if (enabled && intervalMs > 0) {\r\n      intervalRef.current = setInterval(() => {\r\n        fetchRequests();\r\n      }, intervalMs);\r\n\r\n      return () => {\r\n        if (intervalRef.current) {\r\n          clearInterval(intervalRef.current);\r\n        }\r\n      };\r\n    }\r\n  }, [enabled, intervalMs, fetchRequests]);\r\n\r\n  // Refetch on window focus\r\n  useEffect(() => {\r\n    if (!enabled) return;\r\n\r\n    const handleFocus = () => {\r\n      fetchRequests();\r\n    };\r\n\r\n    window.addEventListener('focus', handleFocus);\r\n    return () => {\r\n      window.removeEventListener('focus', handleFocus);\r\n    };\r\n  }, [enabled, fetchRequests]);\r\n\r\n  // Request notification permission\r\n  useEffect(() => {\r\n    if (enabled && 'Notification' in window && Notification.permission === 'default') {\r\n      Notification.requestPermission();\r\n    }\r\n  }, [enabled]);\r\n\r\n  return {\r\n    requests,\r\n    loading,\r\n    error,\r\n    refetch,\r\n    newRequestsCount,\r\n    resetNewRequestsCount,\r\n  };\r\n}\r\n\r\n","import { api } from './client';\r\nimport type { \r\n  ServiceRequest, \r\n  CreateInstantRequestPayload, \r\n  CreateScheduledRequestPayload,\r\n  ServiceRequestStatus\r\n} from '../types/serviceRequest';\r\n\r\n// Buyer APIs\r\nexport async function createInstantRequest(payload: CreateInstantRequestPayload): Promise<ServiceRequest> {\r\n  try {\r\n    const { data } = await api.post('/service-requests/instant', payload);\r\n    return data as ServiceRequest;\r\n  } catch (error) {\r\n    // Handle instant request creation error\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function createScheduledRequest(payload: CreateScheduledRequestPayload): Promise<ServiceRequest> {\r\n  try {\r\n    const { data } = await api.post('/service-requests/scheduled', payload);\r\n    return data as ServiceRequest;\r\n  } catch (error) {\r\n    // Handle scheduled request creation error\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function boostRequestPrice(requestId: string, newPrice: number): Promise<ServiceRequest> {\r\n  try {\r\n    const { data } = await api.patch(`/service-requests/${requestId}/boost-price`, { newPrice });\r\n    return data as ServiceRequest;\r\n  } catch (error) {\r\n    // Handle price boost error\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getUserRequests(): Promise<ServiceRequest[]> {\r\n  try {\r\n    const { data } = await api.get('/service-requests/user');\r\n    return data as ServiceRequest[];\r\n  } catch (error) {\r\n    // Handle user requests fetch error\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function cancelRequest(requestId: string): Promise<void> {\r\n  try {\r\n    await api.patch(`/service-requests/${requestId}/cancel`);\r\n  } catch (error) {\r\n    // Handle request cancellation error\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Seller APIs\r\nexport async function getNearbyInstantRequests(radius: number, categoryId?: string): Promise<ServiceRequest[]> {\r\n  try {\r\n    const params = new URLSearchParams();\r\n    params.append('radius', radius.toString());\r\n    if (categoryId) params.append('categoryId', categoryId);\r\n    \r\n    const { data } = await api.get(`/service-requests/nearby?${params.toString()}`);\r\n    return data as ServiceRequest[];\r\n  } catch (error) {\r\n    // Handle nearby requests fetch error\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function acceptRequest(requestId: string): Promise<ServiceRequest> {\r\n  try {\r\n    const { data } = await api.post(`/service-requests/${requestId}/accept`);\r\n    return data as ServiceRequest;\r\n  } catch (error) {\r\n    // Handle request acceptance error\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getSellerRequests(): Promise<ServiceRequest[]> {\r\n  try {\r\n    const { data } = await api.get('/service-requests/seller');\r\n    return data as ServiceRequest[];\r\n  } catch (error) {\r\n    // Handle seller requests fetch error\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function updateRequestStatus(requestId: string, status: ServiceRequestStatus): Promise<ServiceRequest> {\r\n  try {\r\n    const { data } = await api.patch(`/service-requests/${requestId}/status`, { status });\r\n    return data as ServiceRequest;\r\n  } catch (error) {\r\n    // Handle request status update error\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getRequestById(requestId: string): Promise<ServiceRequest> {\r\n  try {\r\n    const { data } = await api.get(`/service-requests/${requestId}`);\r\n    return data as ServiceRequest;\r\n  } catch (error) {\r\n    // Handle request fetch error\r\n    throw error;\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { motion } from 'framer-motion';\r\nimport type { SellerProfile } from '../types/seller';\r\nimport { SERVICE_CATEGORIES, updateSellerProfile } from '../mocks/sellerProfile';\r\n\r\ntype SellerProfileFormValues = {\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  bio: string;\r\n  location: string;\r\n  yearsOfExperience: number;\r\n  serviceCategories: string[];\r\n  certifications: string[];\r\n};\r\n\r\ntype SellerProfileFormProps = {\r\n  initial?: SellerProfile;\r\n  onSubmit?: (values: SellerProfileFormValues) => void;\r\n};\r\n\r\nexport const SellerProfileForm: React.FC<SellerProfileFormProps> = ({ \r\n  initial, \r\n  onSubmit \r\n}) => {\r\n  const [isEditing, setIsEditing] = React.useState(false);\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\r\n  const [certificationInput, setCertificationInput] = React.useState('');\r\n  const [profileImage, setProfileImage] = React.useState<string | null>(initial?.profilePicture || null);\r\n  const [isUploadingImage, setIsUploadingImage] = React.useState(false);\r\n  const [categorySearch, setCategorySearch] = React.useState('');\r\n\r\n  const { register, handleSubmit, formState: { errors }, watch, setValue, reset } = useForm<SellerProfileFormValues>({\r\n    defaultValues: {\r\n      name: initial?.name || '',\r\n      email: initial?.email || '',\r\n      phone: initial?.phone || '',\r\n      bio: initial?.bio || '',\r\n      location: initial?.location || '',\r\n      yearsOfExperience: initial?.yearsOfExperience || 0,\r\n      serviceCategories: initial?.serviceCategories || [],\r\n      certifications: initial?.certifications || [],\r\n    },\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const watchedServiceCategories = watch('serviceCategories');\r\n  const watchedCertifications = watch('certifications');\r\n\r\n  const toggleServiceCategory = (category: string) => {\r\n    const current = watchedServiceCategories || [];\r\n    if (current.includes(category)) {\r\n      setValue('serviceCategories', current.filter(c => c !== category));\r\n    } else {\r\n      setValue('serviceCategories', [...current, category]);\r\n    }\r\n  };\r\n\r\n  const addCertification = () => {\r\n    if (certificationInput.trim() && !watchedCertifications.includes(certificationInput.trim())) {\r\n      setValue('certifications', [...watchedCertifications, certificationInput.trim()]);\r\n      setCertificationInput('');\r\n    }\r\n  };\r\n\r\n  const removeCertification = (cert: string) => {\r\n    setValue('certifications', watchedCertifications.filter(c => c !== cert));\r\n  };\r\n\r\n  const handleImageUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    // Validate file type\r\n    if (!file.type.startsWith('image/')) {\r\n      alert('Please select an image file');\r\n      return;\r\n    }\r\n\r\n    // Validate file size (max 5MB)\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      alert('Image size should be less than 5MB');\r\n      return;\r\n    }\r\n\r\n    setIsUploadingImage(true);\r\n    \r\n    try {\r\n      // Convert file to base64 for demo purposes\r\n      // In production, you would upload to a cloud service like AWS S3, Cloudinary, etc.\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const result = e.target?.result as string;\r\n        setProfileImage(result);\r\n        \r\n        // Update the profile with the new image\r\n        const updatedProfile = {\r\n          ...initial,\r\n          profilePicture: result,\r\n        };\r\n        \r\n        // Save to localStorage\r\n        localStorage.setItem('sellerProfile', JSON.stringify(updatedProfile));\r\n        \r\n        setIsUploadingImage(false);\r\n        alert('Profile picture updated successfully!');\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } catch (error) {\r\n      // Handle image upload error\r\n      alert('Failed to upload image. Please try again.');\r\n      setIsUploadingImage(false);\r\n    }\r\n  };\r\n\r\n  const removeProfileImage = () => {\r\n    setProfileImage(null);\r\n    const updatedProfile = {\r\n      ...initial,\r\n      profilePicture: undefined,\r\n    };\r\n    localStorage.setItem('sellerProfile', JSON.stringify(updatedProfile));\r\n  };\r\n\r\n  // Filter categories based on search\r\n  const filteredCategories = React.useMemo(() => {\r\n    if (!categorySearch.trim()) {\r\n      return SERVICE_CATEGORIES;\r\n    }\r\n    \r\n    const searchTerm = categorySearch.toLowerCase();\r\n    return SERVICE_CATEGORIES.filter(category => \r\n      category.toLowerCase().includes(searchTerm)\r\n    );\r\n  }, [categorySearch]);\r\n\r\n  // Group categories by type for better organization\r\n  const groupedCategories = React.useMemo(() => {\r\n    const groups: { [key: string]: string[] } = {\r\n      'Construction & Building': [],\r\n      'Home Services': [],\r\n      'Technical Services': [],\r\n      'Automotive': [],\r\n      'Personal Services': [],\r\n      'Professional Services': [],\r\n      'Health & Wellness': [],\r\n      'Creative Services': [],\r\n      'Maintenance & Repair': [],\r\n      'Specialized Services': [],\r\n      'Business Services': []\r\n    };\r\n\r\n    filteredCategories.forEach(category => {\r\n      // Categorize based on the category name\r\n      if (['Plumber', 'Electrician', 'Welder', 'Carpenter', 'Painter', 'HVAC', 'Roofing', 'Flooring', 'Masonry', 'Drywall', 'Insulation', 'Concrete Work', 'Fencing', 'Landscaping'].includes(category)) {\r\n        groups['Construction & Building'].push(category);\r\n      } else if (['Cleaning', 'Housekeeping', 'Laundry', 'Pest Control', 'Window Cleaning', 'Carpet Cleaning', 'Pressure Washing', 'Gutter Cleaning', 'Snow Removal'].includes(category)) {\r\n        groups['Home Services'].push(category);\r\n      } else if (['Technician', 'Computer Repair', 'Phone Repair', 'Appliance Repair', 'Electronics Repair', 'Network Setup', 'Security Systems', 'Smart Home Installation'].includes(category)) {\r\n        groups['Technical Services'].push(category);\r\n      } else if (['Auto Mechanic', 'Auto Body Repair', 'Tire Service', 'Oil Change', 'Car Wash', 'Auto Detailing', 'Towing'].includes(category)) {\r\n        groups['Automotive'].push(category);\r\n      } else if (['Hair Stylist', 'Barber', 'Makeup Artist', 'Nail Technician', 'Massage Therapist', 'Personal Trainer', 'Photographer', 'Videographer', 'Event Planner'].includes(category)) {\r\n        groups['Personal Services'].push(category);\r\n      } else if (['Accountant', 'Lawyer', 'Consultant', 'Translator', 'Tutor', 'Music Teacher', 'Language Teacher', 'Life Coach'].includes(category)) {\r\n        groups['Professional Services'].push(category);\r\n      } else if (['Yoga Instructor', 'Pilates Instructor', 'Nutritionist', 'Physical Therapist', 'Chiropractor', 'Dentist', 'Veterinarian'].includes(category)) {\r\n        groups['Health & Wellness'].push(category);\r\n      } else if (['Graphic Designer', 'Web Designer', 'Artist', 'Writer', 'Editor', 'Musician', 'DJ', 'Singer'].includes(category)) {\r\n        groups['Creative Services'].push(category);\r\n      } else if (['Handyman', 'Locksmith', 'Appliance Installation', 'Furniture Assembly', 'Moving Services', 'Storage Solutions'].includes(category)) {\r\n        groups['Maintenance & Repair'].push(category);\r\n      } else if (['Pool Maintenance', 'Spa Services', 'Pet Grooming', 'Pet Sitting', 'Childcare', 'Elderly Care', 'House Sitting', 'Plant Care'].includes(category)) {\r\n        groups['Specialized Services'].push(category);\r\n      } else if (['Virtual Assistant', 'Data Entry', 'Bookkeeping', 'Social Media Management', 'Content Creation', 'Marketing', 'Sales', 'Customer Service'].includes(category)) {\r\n        groups['Business Services'].push(category);\r\n      }\r\n    });\r\n\r\n    // Remove empty groups\r\n    return Object.entries(groups).filter(([_, categories]) => categories.length > 0);\r\n  }, [filteredCategories]);\r\n\r\n  const handleFormSubmit = async (values: SellerProfileFormValues) => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\r\n      \r\n      // Update localStorage\r\n      updateSellerProfile(values);\r\n      \r\n      setIsEditing(false);\r\n      onSubmit?.(values);\r\n      \r\n      // Show success message\r\n      alert('Profile updated successfully!');\r\n    } catch (error) {\r\n      // Handle profile update error\r\n      alert('Failed to update profile. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    reset();\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-slate-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Seller Profile</h2>\r\n        {!isEditing && (\r\n          <button\r\n            onClick={() => setIsEditing(true)}\r\n            className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors text-sm font-medium\"\r\n          >\r\n            Edit Profile\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit(handleFormSubmit)} className=\"space-y-6\">\r\n        {/* Profile Picture */}\r\n        <div className=\"flex items-center space-x-4\">\r\n          <div className=\"relative w-20 h-20 bg-gray-200 dark:bg-gray-700 rounded-full flex items-center justify-center overflow-hidden\">\r\n            {profileImage ? (\r\n              <img \r\n                src={profileImage} \r\n                alt={`${initial?.name || 'User'} profile picture`}\r\n                className=\"w-full h-full object-cover rounded-full\"\r\n                role=\"img\"\r\n                aria-label=\"Profile picture\"\r\n              />\r\n            ) : (\r\n              <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n              </svg>\r\n            )}\r\n            {isUploadingImage && (\r\n              <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center rounded-full\">\r\n                <svg className=\"w-6 h-6 text-white animate-spin\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                </svg>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {isEditing && (\r\n            <div className=\"flex flex-col gap-2\">\r\n              <label className=\"px-3 py-1.5 text-sm border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors cursor-pointer\">\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleImageUpload}\r\n                  className=\"hidden\"\r\n                  disabled={isUploadingImage}\r\n                  aria-label=\"Upload profile picture\"\r\n                />\r\n                {isUploadingImage ? 'Uploading...' : 'Upload Photo'}\r\n              </label>\r\n              {profileImage && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={removeProfileImage}\r\n                  className=\"px-3 py-1.5 text-sm text-red-600 dark:text-red-400 border border-red-300 dark:border-red-600 rounded-lg hover:bg-red-50 dark:hover:bg-red-900/20 transition-colors\"\r\n                >\r\n                  Remove Photo\r\n                </button>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Basic Information */}\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n              Name *\r\n            </label>\r\n            {isEditing ? (\r\n              <input\r\n                {...register('name', { required: 'Name is required' })}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-slate-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n                placeholder=\"Your full name\"\r\n              />\r\n            ) : (\r\n              <p className=\"text-gray-900 dark:text-white\">{initial?.name || 'Not provided'}</p>\r\n            )}\r\n            {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name.message}</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n              Email *\r\n            </label>\r\n            {isEditing ? (\r\n              <input\r\n                type=\"email\"\r\n                {...register('email', { required: 'Email is required' })}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-slate-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n                placeholder=\"your@email.com\"\r\n              />\r\n            ) : (\r\n              <p className=\"text-gray-900 dark:text-white\">{initial?.email || 'Not provided'}</p>\r\n            )}\r\n            {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email.message}</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n              Phone\r\n            </label>\r\n            {isEditing ? (\r\n              <input\r\n                {...register('phone')}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-slate-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n                placeholder=\"+1 (555) 123-4567\"\r\n              />\r\n            ) : (\r\n              <p className=\"text-gray-900 dark:text-white\">{initial?.phone || 'Not provided'}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n              Years of Experience\r\n            </label>\r\n            {isEditing ? (\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"50\"\r\n                {...register('yearsOfExperience', { valueAsNumber: true })}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-slate-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n                placeholder=\"5\"\r\n              />\r\n            ) : (\r\n              <p className=\"text-gray-900 dark:text-white\">{initial?.yearsOfExperience || 0} years</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Location */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n            Location\r\n          </label>\r\n          {isEditing ? (\r\n            <input\r\n              {...register('location')}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-slate-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n              placeholder=\"City, State\"\r\n            />\r\n          ) : (\r\n            <p className=\"text-gray-900 dark:text-white\">{initial?.location || 'Not provided'}</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Bio */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n            Bio / Service Description\r\n          </label>\r\n          {isEditing ? (\r\n            <textarea\r\n              {...register('bio')}\r\n              rows={4}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-slate-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-primary-500 focus:border-primary-500 resize-none\"\r\n              placeholder=\"Tell customers about your services, experience, and what makes you unique...\"\r\n            />\r\n          ) : (\r\n            <p className=\"text-gray-900 dark:text-white whitespace-pre-wrap\">\r\n              {initial?.bio || 'No bio provided'}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Service Categories */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            Service Categories *\r\n          </label>\r\n          {isEditing ? (\r\n            <div className=\"space-y-4\">\r\n              {/* Search for categories */}\r\n              <div className=\"relative\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search categories...\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-slate-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n                  value={categorySearch}\r\n                  onChange={(e) => setCategorySearch(e.target.value)}\r\n                />\r\n                {categorySearch ? (\r\n                  <button\r\n                    onClick={() => setCategorySearch('')}\r\n                    className=\"absolute right-3 top-2.5 w-5 h-5 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\r\n                  >\r\n                    <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                    </svg>\r\n                  </button>\r\n                ) : (\r\n                  <svg className=\"absolute right-3 top-2.5 w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n                  </svg>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Quick Filter Buttons */}\r\n              <div className=\"space-y-2\">\r\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">Quick filters:</div>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {['Construction', 'Home', 'Technical', 'Automotive', 'Personal', 'Professional', 'Health', 'Creative'].map((filter) => (\r\n                    <button\r\n                      key={filter}\r\n                      onClick={() => setCategorySearch(filter)}\r\n                      className=\"px-3 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\r\n                    >\r\n                      {filter}\r\n                    </button>\r\n                  ))}\r\n                  <button\r\n                    onClick={() => setCategorySearch('')}\r\n                    className=\"px-3 py-1 text-xs bg-primary-100 dark:bg-primary-900/30 text-primary-700 dark:text-primary-300 rounded-full hover:bg-primary-200 dark:hover:bg-primary-900/50 transition-colors\"\r\n                  >\r\n                    Clear\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Categories organized by sections */}\r\n              <div className=\"max-h-80 overflow-y-auto space-y-4\">\r\n                {groupedCategories.map(([groupName, categories]) => (\r\n                  <div key={groupName} className=\"space-y-2\">\r\n                    <h4 className=\"text-sm font-medium text-gray-800 dark:text-gray-200 border-b border-gray-200 dark:border-gray-600 pb-1\">\r\n                      {groupName}\r\n                    </h4>\r\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 ml-2\">\r\n                      {categories.map((category) => (\r\n                        <label key={category} className=\"flex items-center space-x-2 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={watchedServiceCategories?.includes(category) || false}\r\n                            onChange={() => toggleServiceCategory(category)}\r\n                            className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\r\n                          />\r\n                          <span className=\"text-sm text-gray-700 dark:text-gray-300\">{category}</span>\r\n                        </label>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                \r\n                {filteredCategories.length === 0 && categorySearch && (\r\n                  <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n                    <svg className=\"w-12 h-12 mx-auto mb-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n                    </svg>\r\n                    <p>No categories found matching \"{categorySearch}\"</p>\r\n                    <button\r\n                      onClick={() => setCategorySearch('')}\r\n                      className=\"mt-2 text-primary-600 dark:text-primary-400 hover:underline text-sm\"\r\n                    >\r\n                      Clear search\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Selected count */}\r\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                {watchedServiceCategories?.length || 0} categories selected\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {initial?.serviceCategories?.map((category) => (\r\n                <span\r\n                  key={category}\r\n                  className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900/30 text-primary-800 dark:text-primary-200 rounded-full text-sm\"\r\n                >\r\n                  {category}\r\n                </span>\r\n              )) || <p className=\"text-gray-500 dark:text-gray-400\">No categories selected</p>}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Certifications */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            Certifications\r\n          </label>\r\n          {isEditing ? (\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex gap-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={certificationInput}\r\n                  onChange={(e) => setCertificationInput(e.target.value)}\r\n                  onKeyPress={(e) => e.key === 'Enter' && (e.preventDefault(), addCertification())}\r\n                  className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-slate-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\r\n                  placeholder=\"Add certification...\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={addCertification}\r\n                  className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\r\n                >\r\n                  Add\r\n                </button>\r\n              </div>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {watchedCertifications?.map((cert) => (\r\n                  <span\r\n                    key={cert}\r\n                    className=\"flex items-center gap-1 px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full text-sm\"\r\n                  >\r\n                    {cert}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => removeCertification(cert)}\r\n                      className=\"text-gray-500 hover:text-red-500\"\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {initial?.certifications?.map((cert) => (\r\n                <span\r\n                  key={cert}\r\n                  className=\"px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full text-sm\"\r\n                >\r\n                  {cert}\r\n                </span>\r\n              )) || <p className=\"text-gray-500 dark:text-gray-400\">No certifications</p>}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Rating Display (Read-only) */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n            Rating\r\n          </label>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"flex items-center\">\r\n              {[...Array(5)].map((_, i) => (\r\n                <svg\r\n                  key={i}\r\n                  className={`w-5 h-5 ${\r\n                    i < Math.floor(initial?.rating || 0)\r\n                      ? 'text-yellow-400'\r\n                      : 'text-gray-300 dark:text-gray-600'\r\n                  }`}\r\n                  fill=\"currentColor\"\r\n                  viewBox=\"0 0 20 20\"\r\n                >\r\n                  <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                </svg>\r\n              ))}\r\n            </div>\r\n            <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              {initial?.rating?.toFixed(1)} ({initial?.reviewsCount || 0} reviews)\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Action Buttons */}\r\n        {isEditing && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            className=\"flex gap-3 pt-4 border-t border-gray-200 dark:border-gray-700\"\r\n          >\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"px-6 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:opacity-50 transition-colors font-medium\"\r\n            >\r\n              {isSubmitting ? 'Saving...' : 'Save Changes'}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCancel}\r\n              className=\"px-6 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors font-medium\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </motion.div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\ntype StatCardProps = {\r\n  title: string;\r\n  value: string | number;\r\n  subtitle?: string;\r\n  icon: React.ReactNode;\r\n  trend?: {\r\n    value: number;\r\n    isPositive: boolean;\r\n  };\r\n  color?: 'blue' | 'green' | 'orange' | 'purple';\r\n};\r\n\r\nconst colorClasses = {\r\n  blue: 'bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400',\r\n  green: 'bg-green-50 dark:bg-green-900/20 text-green-600 dark:text-green-400',\r\n  orange: 'bg-orange-50 dark:bg-orange-900/20 text-orange-600 dark:text-orange-400',\r\n  purple: 'bg-purple-50 dark:bg-purple-900/20 text-purple-600 dark:text-purple-400',\r\n};\r\n\r\nexport const StatCard: React.FC<StatCardProps> = ({\r\n  title,\r\n  value,\r\n  subtitle,\r\n  icon,\r\n  trend,\r\n  color = 'blue',\r\n}) => {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      className=\"bg-white dark:bg-slate-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6 hover:shadow-md transition-shadow\"\r\n    >\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex-1\">\r\n          <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400 mb-1\">\r\n            {title}\r\n          </p>\r\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            {value}\r\n          </p>\r\n          {subtitle && (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n              {subtitle}\r\n            </p>\r\n          )}\r\n          {trend && (\r\n            <div className=\"flex items-center mt-2\">\r\n              <span\r\n                className={`text-sm font-medium ${\r\n                  trend.isPositive ? 'text-green-600' : 'text-red-600'\r\n                }`}\r\n              >\r\n                {trend.isPositive ? '+' : ''}{trend.value}%\r\n              </span>\r\n              <span className=\"text-sm text-gray-500 dark:text-gray-400 ml-1\">\r\n                vs last week\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className={`p-3 rounded-lg ${colorClasses[color]}`}>\r\n          {icon}\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\ntype SellerStatsProps = {\r\n  requestsToday: number;\r\n  acceptanceRate: number;\r\n  avgResponseTime: string;\r\n  totalEarnings: number;\r\n};\r\n\r\nexport const SellerStats: React.FC<SellerStatsProps> = ({\r\n  requestsToday,\r\n  acceptanceRate,\r\n  avgResponseTime,\r\n  totalEarnings,\r\n}) => {\r\n  return (\r\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-6 mb-6 lg:mb-8\">\r\n      <StatCard\r\n        title=\"Requests Today\"\r\n        value={requestsToday}\r\n        subtitle=\"New service requests\"\r\n        icon={\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n          </svg>\r\n        }\r\n        color=\"blue\"\r\n        trend={{ value: 12, isPositive: true }}\r\n      />\r\n      \r\n      <StatCard\r\n        title=\"Acceptance Rate\"\r\n        value={`${acceptanceRate}%`}\r\n        subtitle=\"Requests accepted\"\r\n        icon={\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n          </svg>\r\n        }\r\n        color=\"green\"\r\n        trend={{ value: 5, isPositive: true }}\r\n      />\r\n      \r\n      <StatCard\r\n        title=\"Avg Response Time\"\r\n        value={avgResponseTime}\r\n        subtitle=\"Time to respond\"\r\n        icon={\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n          </svg>\r\n        }\r\n        color=\"orange\"\r\n      />\r\n      \r\n      <StatCard\r\n        title=\"This Week's Earnings\"\r\n        value={`$${totalEarnings.toFixed(2)}`}\r\n        subtitle=\"Total revenue\"\r\n        icon={\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\r\n          </svg>\r\n        }\r\n        color=\"purple\"\r\n        trend={{ value: 18, isPositive: true }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { ListingCard, type Listing } from '../components/ListingCard';\r\nimport { ListingForm, type ListingFormValues } from '../components/ListingForm';\r\nimport { Skeleton, SkeletonText } from '../components/Skeleton';\r\nimport { createListing as apiCreate, fetchSellerListings, removeListing as apiRemove, updateListing as apiUpdate } from '../api/services';\r\nimport { ServiceRequestCard } from '../components/ServiceRequestCard';\r\nimport { useServiceRequestPolling } from '../hooks/useServiceRequestPolling';\r\nimport { SellerProfileForm } from '../components/SellerProfileForm';\r\nimport { SellerStats } from '../components/SellerStats';\r\nimport { initializeSellerProfile, updateSellerProfile } from '../mocks/sellerProfile';\r\nimport type { SellerProfile } from '../types/seller';\r\n// import { acceptRequest } from '../api/serviceRequests';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\ntype Message = { id: string; from: string; content: string; at: string };\r\n\r\nexport const SellerDashboardPage: React.FC = () => {\r\n  const [loading, setLoading] = React.useState<boolean>(true);\r\n  const [listings, setListings] = React.useState<Listing[]>([]);\r\n  const [showIncomingRequests, setShowIncomingRequests] = React.useState(true);\r\n  const [acceptingId, setAcceptingId] = React.useState<string | null>(null);\r\n  const [sortBy, setSortBy] = React.useState<'distance' | 'price' | 'time'>('time');\r\n  const [sellerProfile, setSellerProfile] = React.useState<SellerProfile | null>(null);\r\n  \r\n  // Polling for incoming service requests\r\n  const {\r\n    requests: incomingRequests,\r\n    loading: requestsLoading,\r\n    refetch,\r\n  } = useServiceRequestPolling({\r\n    enabled: true, // Always poll when seller dashboard is open\r\n    intervalMs: 20000, // Poll every 20 seconds\r\n    radius: 50, // 50km radius\r\n    useMockData: true, // Use mock data for development\r\n  });\r\n\r\n  // Seller's location (would come from profile in production)\r\n  const sellerLocation = { lat: 40.7128, lng: -74.0060 };\r\n\r\n  // Initialize seller profile\r\n  React.useEffect(() => {\r\n    const profile = initializeSellerProfile();\r\n    setSellerProfile(profile);\r\n  }, []);\r\n\r\n  // Filter requests based on seller's service categories\r\n  const relevantRequests = React.useMemo(() => {\r\n    if (!sellerProfile?.serviceCategories?.length) {\r\n      return [];\r\n    }\r\n    return incomingRequests.filter(request => \r\n      sellerProfile.serviceCategories.includes(request.categoryName)\r\n    );\r\n  }, [incomingRequests, sellerProfile]);\r\n\r\n  // Calculate statistics\r\n  const stats = React.useMemo(() => {\r\n    const today = new Date().toDateString();\r\n    const requestsToday = relevantRequests.filter(req => \r\n      new Date(req.createdAt).toDateString() === today\r\n    ).length;\r\n    \r\n    const acceptedRequests = relevantRequests.filter(req => \r\n      ['accepted', 'in_progress', 'completed'].includes(req.status)\r\n    ).length;\r\n    \r\n    const acceptanceRate = relevantRequests.length > 0 \r\n      ? Math.round((acceptedRequests / relevantRequests.length) * 100)\r\n      : 0;\r\n\r\n    return {\r\n      requestsToday,\r\n      acceptanceRate,\r\n      avgResponseTime: '1.2 hours',\r\n      totalEarnings: 1250.75, // Mock data\r\n    };\r\n  }, [relevantRequests]);\r\n\r\n  React.useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n        const data = await fetchSellerListings();\r\n        if (mounted) {\r\n          // Ensure we always set an array\r\n          const listingsData = Array.isArray(data) ? data : [];\r\n          setListings(listingsData);\r\n        }\r\n      } catch {\r\n        if (mounted) {\r\n          setListings([\r\n            { id: 'l1', title: 'Pipe Installation', price: 120, status: 'available', views: 142, rating: 4.6, description: 'Residential pipe fitting' },\r\n            { id: 'l2', title: 'AC Repair', price: 80, status: 'sold', views: 98, rating: 4.4, description: 'Split AC diagnostics and repair' },\r\n          ]);\r\n        }\r\n      } finally {\r\n        if (mounted) setLoading(false);\r\n      }\r\n    })();\r\n    return () => { mounted = false; };\r\n  }, []);\r\n  const [messages] = React.useState<Message[]>([\r\n    { id: 'm1', from: 'Jane', content: 'Is the AC repair available this weekend?', at: new Date().toISOString() },\r\n    { id: 'm2', from: 'Mark', content: 'Can you provide an invoice for the last job?', at: new Date(Date.now() - 3600000).toISOString() },\r\n  ]);\r\n  const [editing, setEditing] = React.useState<Listing | null>(null);\r\n\r\n  const addListing = (values: ListingFormValues) => {\r\n    const next: Listing = {\r\n      id: Math.random().toString(36).slice(2),\r\n      title: values.title,\r\n      price: Number(values.price),\r\n      description: values.description,\r\n      status: 'available',\r\n      views: 0,\r\n      rating: 0,\r\n    };\r\n    setListings(prev => [next, ...prev]);\r\n    apiCreate(values).catch(() => {/* keep optimistic */});\r\n  };\r\n\r\n  const saveListing = (values: ListingFormValues) => {\r\n    if (!editing) return;\r\n    setListings(prev => prev.map(l => l.id === editing.id ? { ...l, ...values, price: Number(values.price) } : l));\r\n    const id = editing.id;\r\n    setEditing(null);\r\n    apiUpdate(id, values).catch(() => {/* keep optimistic */});\r\n  };\r\n\r\n  const toggleStatus = (id: string) => setListings(prev => prev.map(l => l.id === id ? { ...l, status: l.status === 'available' ? 'sold' : 'available' } : l));\r\n  const removeListing = (id: string) => {\r\n    setListings(prev => prev.filter(l => l.id !== id));\r\n    apiRemove(id).catch(() => {/* keep optimistic */});\r\n  };\r\n\r\n  const handleAcceptRequest = async (requestId: string) => {\r\n    try {\r\n      setAcceptingId(requestId);\r\n      \r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // In production: await acceptRequest(requestId);\r\n      \r\n      alert(`Request accepted! You can now view it in your accepted requests.`);\r\n      refetch(); // Refresh the list\r\n    } catch (error) {\r\n      // Handle error silently or show user-friendly message\r\n      alert('Failed to accept request. Please try again.');\r\n    } finally {\r\n      setAcceptingId(null);\r\n    }\r\n  };\r\n\r\n  const handleProfileUpdate = (updatedProfile: Partial<SellerProfile>) => {\r\n    const newProfile = updateSellerProfile(updatedProfile);\r\n    setSellerProfile(newProfile);\r\n  };\r\n\r\n  const sortedRequests = [...relevantRequests].sort((a, b) => {\r\n    if (sortBy === 'price') {\r\n      return b.currentPrice - a.currentPrice;\r\n    } else if (sortBy === 'distance') {\r\n      // Calculate distances (simplified, would use actual calculation)\r\n      return 0;\r\n    } else {\r\n      // Sort by time (newest first)\r\n      return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <section className=\"max-w-none\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h1 className=\"text-2xl font-semibold\">Seller Dashboard</h1>\r\n        <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n          Welcome back, {sellerProfile?.name || 'Seller'}!\r\n        </div>\r\n      </div>\r\n\r\n      {/* Statistics Cards */}\r\n      <SellerStats {...stats} />\r\n\r\n      {/* Main Content Grid */}\r\n      <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-4 lg:gap-6\">\r\n        {/* Left Column - Profile */}\r\n        <div className=\"xl:col-span-1\" data-profile-section>\r\n          <SellerProfileForm \r\n            initial={sellerProfile || undefined}\r\n            onSubmit={handleProfileUpdate}\r\n          />\r\n        </div>\r\n\r\n        {/* Right Column - Requests and Listings */}\r\n        <div className=\"xl:col-span-2 space-y-4 lg:space-y-6\">\r\n          {/* Incoming Requests Section */}\r\n          <div className=\"bg-white dark:bg-slate-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\">\r\n            <div className=\"flex flex-col sm:flex-row sm:items-center justify-between mb-4 gap-3\">\r\n              <div className=\"flex flex-col sm:flex-row sm:items-center gap-3\">\r\n                <h2 className=\"text-lg sm:text-xl font-semibold\">Relevant Service Requests</h2>\r\n                {relevantRequests.length > 0 && (\r\n                  <motion.span\r\n                    initial={{ scale: 0 }}\r\n                    animate={{ scale: 1 }}\r\n                    className=\"px-3 py-1 rounded-full bg-primary-100 dark:bg-primary-900/30 text-primary-800 dark:text-primary-200 text-sm font-bold self-start sm:self-auto\"\r\n                  >\r\n                    {relevantRequests.length} matching your services\r\n                  </motion.span>\r\n                )}\r\n              </div>\r\n              <div className=\"flex flex-col sm:flex-row items-stretch sm:items-center gap-2 sm:gap-3\">\r\n                {/* Sort By */}\r\n                <select\r\n                  value={sortBy}\r\n                  onChange={(e) => setSortBy(e.target.value as typeof sortBy)}\r\n                  className=\"px-3 py-1.5 rounded-lg border border-gray-300 dark:border-gray-600 text-sm dark:bg-slate-800\"\r\n                >\r\n                  <option value=\"time\">Newest First</option>\r\n                  <option value=\"price\">Highest Price</option>\r\n                  <option value=\"distance\">Nearest</option>\r\n                </select>\r\n                \r\n                <button\r\n                  onClick={() => setShowIncomingRequests(!showIncomingRequests)}\r\n                  className=\"text-primary-600 dark:text-primary-400 hover:underline text-sm font-medium\"\r\n                >\r\n                  {showIncomingRequests ? 'Hide' : 'Show'} ({relevantRequests.length})\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <AnimatePresence>\r\n              {showIncomingRequests && (\r\n                <motion.div\r\n                  initial={{ height: 0, opacity: 0 }}\r\n                  animate={{ height: 'auto', opacity: 1 }}\r\n                  exit={{ height: 0, opacity: 0 }}\r\n                  transition={{ duration: 0.3 }}\r\n                >\r\n                  {requestsLoading ? (\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                      {Array.from({ length: 4 }).map((_, i) => (\r\n                        <div key={i} className=\"rounded-xl border p-4 dark:border-slate-700\">\r\n                          <Skeleton className=\"h-5 w-1/3\" />\r\n                          <SkeletonText className=\"mt-2\" lines={3} />\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : !sellerProfile?.serviceCategories?.length ? (\r\n                    <div className=\"text-center py-12\">\r\n                      <svg className=\"w-16 h-16 mx-auto text-gray-400 dark:text-gray-600 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                      </svg>\r\n                      <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n                        No Service Categories Selected\r\n                      </h3>\r\n                      <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\r\n                        Please select your service categories in your profile to see relevant requests.\r\n                      </p>\r\n                      <button\r\n                        onClick={() => {\r\n                          const profileElement = document.querySelector('[data-profile-section]');\r\n                          profileElement?.scrollIntoView({ behavior: 'smooth' });\r\n                        }}\r\n                        className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n                      >\r\n                        Update Profile\r\n                      </button>\r\n                    </div>\r\n                  ) : sortedRequests.length > 0 ? (\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                      {sortedRequests.map((request) => (\r\n                        <ServiceRequestCard\r\n                          key={request.id}\r\n                          request={request}\r\n                          viewType=\"seller\"\r\n                          sellerLocation={sellerLocation}\r\n                          onAccept={handleAcceptRequest}\r\n                          accepting={acceptingId === request.id}\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-center py-12\">\r\n                      <svg className=\"w-16 h-16 mx-auto text-gray-400 dark:text-gray-600 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4\" />\r\n                      </svg>\r\n                      <p className=\"text-gray-600 dark:text-gray-400\">No relevant requests at the moment</p>\r\n                      <p className=\"text-sm text-gray-500 dark:text-gray-500 mt-1\">\r\n                        We're checking every 20 seconds for new requests matching your services\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </motion.div>\r\n              )}\r\n            </AnimatePresence>\r\n          </div>\r\n\r\n          {/* Your Listings Section */}\r\n          <div className=\"bg-white dark:bg-slate-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h2 className=\"text-xl font-semibold\">Your Service Listings</h2>\r\n            </div>\r\n            {loading ? (\r\n              <div className=\"grid grid-cols-1 gap-4\">\r\n                {Array.from({ length: 2 }).map((_, i) => (\r\n                  <div key={i} className=\"rounded-xl border p-4 dark:border-slate-700\">\r\n                    <Skeleton className=\"h-5 w-1/3\" />\r\n                    <SkeletonText className=\"mt-2\" lines={2} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"grid grid-cols-1 gap-4\">\r\n                {listings.map(l => (\r\n                  <ListingCard\r\n                    key={l.id}\r\n                    listing={l}\r\n                    onToggleStatus={toggleStatus}\r\n                    onEdit={(id) => setEditing(listings.find(x => x.id === id) ?? null)}\r\n                    onRemove={removeListing}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Add Listing Form */}\r\n          <div className=\"bg-white dark:bg-slate-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">{editing ? 'Edit Listing' : 'Add New Listing'}</h2>\r\n            <ListingForm\r\n              initial={editing ? { title: editing.title, price: editing.price, description: editing.description } : undefined}\r\n              onSubmit={editing ? saveListing : addListing}\r\n            />\r\n            {editing && (\r\n              <button \r\n                className=\"mt-3 rounded-md border px-3 py-1.5 text-sm hover:bg-slate-50 dark:hover:bg-slate-800\" \r\n                onClick={() => setEditing(null)}\r\n              >\r\n                Cancel\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Messages Section */}\r\n          <div className=\"bg-white dark:bg-slate-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Recent Messages</h2>\r\n            <div className=\"space-y-3\">\r\n              {messages.map(m => (\r\n                <div key={m.id} className=\"rounded-lg border border-slate-200 p-3 text-sm dark:border-slate-700\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"font-medium\">{m.from}</span>\r\n                    <span className=\"text-slate-500\">{new Date(m.at).toLocaleString()}</span>\r\n                  </div>\r\n                  <p className=\"mt-1 text-slate-700 dark:text-slate-300\">{m.content}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\n\r\n"],"names":["ListingCard","listing","onToggleStatus","onEdit","onRemove","jsxs","motion","div","initial","opacity","y","whileInView","viewport","once","transition","duration","className","children","jsx","title","description","views","status","price","toFixed","RatingBlock","rating","onClick","id","ListingForm","onSubmit","register","handleSubmit","formState","isSubmitting","useForm","defaultValues","async","values","Promise","r","setTimeout","type","step","valueAsNumber","rows","disabled","useServiceRequestPolling","enabled","intervalMs","radius","categoryId","useMockData","requests","setRequests","useState","loading","setLoading","error","setError","newRequestsCount","setNewRequestsCount","previousRequestIdsRef","useRef","Set","intervalRef","fetchRequests","useCallback","data","getMockInstantRequests","params","URLSearchParams","append","toString","api","get","getNearbyInstantRequests","currentIds","map","previousIds","current","newIds","Array","from","filter","has","length","size","prev","window","Notification","permission","body","icon","err","refetch","resetNewRequestsCount","useEffect","setInterval","clearInterval","handleFocus","addEventListener","removeEventListener","requestPermission","SellerProfileForm","isEditing","setIsEditing","React","setIsSubmitting","certificationInput","setCertificationInput","profileImage","setProfileImage","profilePicture","isUploadingImage","setIsUploadingImage","categorySearch","setCategorySearch","errors","watch","setValue","reset","name","email","phone","bio","location","yearsOfExperience","serviceCategories","certifications","mode","watchedServiceCategories","watchedCertifications","addCertification","trim","includes","filteredCategories","useMemo","SERVICE_CATEGORIES","searchTerm","toLowerCase","category","groupedCategories","groups","Automotive","forEach","push","Object","entries","_","categories","resolve","updateSellerProfile","alert","src","alt","role","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","cx","cy","accept","onChange","event","file","_a","target","files","startsWith","reader","FileReader","onload","e","result","updatedProfile","localStorage","setItem","JSON","stringify","readAsDataURL","required","placeholder","message","min","max","value","groupName","checked","c","toggleServiceCategory","onKeyPress","key","preventDefault","cert","removeCertification","_b","i","Math","floor","_c","reviewsCount","animate","colorClasses","blue","green","orange","purple","StatCard","subtitle","trend","color","isPositive","SellerStats","requestsToday","acceptanceRate","avgResponseTime","totalEarnings","SellerDashboardPage","listings","setListings","showIncomingRequests","setShowIncomingRequests","acceptingId","setAcceptingId","sortBy","setSortBy","sellerProfile","setSellerProfile","incomingRequests","requestsLoading","sellerLocation","lat","lng","profile","initializeSellerProfile","relevantRequests","request","categoryName","stats","today","Date","toDateString","req","createdAt","acceptedRequests","round","mounted","fetchSellerListings","listingsData","isArray","messages","content","at","toISOString","now","editing","setEditing","toggleStatus","l","removeListing","apiRemove","catch","handleAcceptRequest","requestId","sortedRequests","sort","a","b","currentPrice","getTime","newProfile","span","scale","AnimatePresence","height","exit","Skeleton","SkeletonText","lines","ServiceRequestCard","viewType","onAccept","accepting","profileElement","document","querySelector","scrollIntoView","behavior","find","x","Number","apiUpdate","next","random","slice","apiCreate","m","toLocaleString"],"mappings":"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"}