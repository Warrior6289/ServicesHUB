{"version":3,"file":"ServiceRequestDetailsPage-BRUKR3vU.js","sources":["../../src/components/RequestStatusTimeline.tsx","../../src/pages/ServiceRequestDetailsPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport type { ServiceRequest, ServiceRequestStatus } from '../types/serviceRequest';\r\n\r\ntype RequestStatusTimelineProps = {\r\n  request: ServiceRequest;\r\n};\r\n\r\ntype TimelineStep = {\r\n  status: ServiceRequestStatus;\r\n  label: string;\r\n  timestamp?: string;\r\n  active: boolean;\r\n  completed: boolean;\r\n};\r\n\r\nconst statusOrder: ServiceRequestStatus[] = [\r\n  'pending',\r\n  'accepted',\r\n  'in_progress',\r\n  'completed',\r\n];\r\n\r\nexport const RequestStatusTimeline: React.FC<RequestStatusTimelineProps> = ({ request }) => {\r\n  const getSteps = (): TimelineStep[] => {\r\n    const currentStatusIndex = statusOrder.indexOf(request.status);\r\n    \r\n    return statusOrder.map((status, index) => {\r\n      let timestamp: string | undefined;\r\n      \r\n      if (status === 'pending' && request.createdAt) {\r\n        timestamp = request.createdAt;\r\n      } else if (status === 'accepted' && request.acceptedAt) {\r\n        timestamp = request.acceptedAt;\r\n      }\r\n      \r\n      return {\r\n        status,\r\n        label: getStatusLabel(status),\r\n        timestamp,\r\n        active: status === request.status,\r\n        completed: index < currentStatusIndex,\r\n      };\r\n    });\r\n  };\r\n\r\n  const steps = getSteps();\r\n\r\n  const formatTimestamp = (timestamp: string) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleString('en-US', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n  };\r\n\r\n  const isSpecialStatus = ['price_boosted', 'converted_to_scheduled', 'cancelled', 'expired'].includes(request.status);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-slate-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\">\r\n      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">\r\n        Request Status\r\n      </h3>\r\n\r\n      {/* Special Status Alert */}\r\n      {isSpecialStatus && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: -10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className={`mb-6 p-4 rounded-lg ${\r\n            request.status === 'price_boosted'\r\n              ? 'bg-orange-50 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800'\r\n              : request.status === 'converted_to_scheduled'\r\n              ? 'bg-cyan-50 dark:bg-cyan-900/20 border border-cyan-200 dark:border-cyan-800'\r\n              : request.status === 'cancelled'\r\n              ? 'bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800'\r\n              : 'bg-gray-50 dark:bg-gray-900/20 border border-gray-200 dark:border-gray-800'\r\n          }`}\r\n        >\r\n          <div className=\"flex items-start gap-2\">\r\n            <svg className=\"w-5 h-5 mt-0.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n              <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n            <div>\r\n              <p className=\"font-medium\">\r\n                {request.status === 'price_boosted' && 'Price was boosted'}\r\n                {request.status === 'converted_to_scheduled' && 'Converted to scheduled request'}\r\n                {request.status === 'cancelled' && 'Request was cancelled'}\r\n                {request.status === 'expired' && 'Request expired'}\r\n              </p>\r\n              <p className=\"text-sm opacity-75 mt-1\">\r\n                {request.status === 'price_boosted' && `Price increased to $${request.currentPrice.toFixed(2)}`}\r\n                {request.status === 'converted_to_scheduled' && 'No instant service providers accepted. You can now manually schedule.'}\r\n                {request.status === 'cancelled' && 'This request has been cancelled and is no longer active.'}\r\n                {request.status === 'expired' && 'This instant request expired without being accepted.'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n\r\n      {/* Timeline */}\r\n      {!['cancelled', 'expired'].includes(request.status) && (\r\n        <div className=\"relative\">\r\n          {steps.map((step, index) => {\r\n            const isLast = index === steps.length - 1;\r\n\r\n            return (\r\n              <div key={step.status} className=\"relative pb-8 last:pb-0\">\r\n                {/* Connecting Line */}\r\n                {!isLast && (\r\n                  <div className=\"absolute left-4 top-8 bottom-0 w-0.5 bg-gray-200 dark:bg-gray-700\">\r\n                    {step.completed && (\r\n                      <motion.div\r\n                        initial={{ height: 0 }}\r\n                        animate={{ height: '100%' }}\r\n                        className=\"bg-primary-600 w-full\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Step */}\r\n                <div className=\"flex items-start gap-4\">\r\n                  {/* Icon */}\r\n                  <div className=\"relative flex-shrink-0\">\r\n                    <div\r\n                      className={`w-8 h-8 rounded-full border-2 flex items-center justify-center ${\r\n                        step.completed\r\n                          ? 'bg-primary-600 border-primary-600'\r\n                          : step.active\r\n                          ? 'bg-white dark:bg-slate-800 border-primary-600'\r\n                          : 'bg-gray-100 dark:bg-gray-700 border-gray-300 dark:border-gray-600'\r\n                      }`}\r\n                    >\r\n                      {step.completed ? (\r\n                        <svg className=\"w-4 h-4 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                          <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                        </svg>\r\n                      ) : step.active ? (\r\n                        <div className=\"w-3 h-3 rounded-full bg-primary-600 animate-pulse\" />\r\n                      ) : (\r\n                        <div className=\"w-2 h-2 rounded-full bg-gray-400 dark:bg-gray-500\" />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Content */}\r\n                  <div className=\"flex-1 pt-0.5\">\r\n                    <p\r\n                      className={`font-medium ${\r\n                        step.active || step.completed\r\n                          ? 'text-gray-900 dark:text-white'\r\n                          : 'text-gray-500 dark:text-gray-400'\r\n                      }`}\r\n                    >\r\n                      {step.label}\r\n                      {step.active && (\r\n                        <span className=\"ml-2 px-2 py-0.5 text-xs rounded-full bg-primary-100 dark:bg-primary-900/30 text-primary-700 dark:text-primary-300\">\r\n                          Current\r\n                        </span>\r\n                      )}\r\n                    </p>\r\n                    {step.timestamp && (\r\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n                        {formatTimestamp(step.timestamp)}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      {/* Price History */}\r\n      {request.priceHistory.length > 1 && (\r\n        <div className=\"mt-6 pt-6 border-t border-gray-200 dark:border-gray-700\">\r\n          <h4 className=\"text-sm font-semibold text-gray-900 dark:text-white mb-3\">\r\n            Price History\r\n          </h4>\r\n          <div className=\"space-y-2\">\r\n            {request.priceHistory.map((entry, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"flex items-center justify-between text-sm\"\r\n              >\r\n                <span className=\"text-gray-600 dark:text-gray-400\">\r\n                  {formatTimestamp(entry.timestamp)}\r\n                </span>\r\n                <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                  ${entry.price.toFixed(2)}\r\n                  {index > 0 && (\r\n                    <span className=\"ml-2 text-xs text-orange-600 dark:text-orange-400\">\r\n                      +{((entry.price / request.priceHistory[0].price - 1) * 100).toFixed(0)}%\r\n                    </span>\r\n                  )}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getStatusLabel(status: ServiceRequestStatus): string {\r\n  const labels: Record<ServiceRequestStatus, string> = {\r\n    pending: 'Request Submitted',\r\n    price_boosted: 'Price Boosted',\r\n    converted_to_scheduled: 'Converted to Scheduled',\r\n    accepted: 'Provider Accepted',\r\n    in_progress: 'Service in Progress',\r\n    completed: 'Service Completed',\r\n    cancelled: 'Cancelled',\r\n    expired: 'Expired',\r\n  };\r\n  return labels[status];\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport { RequestStatusTimeline } from '../components/RequestStatusTimeline';\r\nimport { PriceBoostModal } from '../components/PriceBoostModal';\r\n// import { getRequestById, boostRequestPrice, cancelRequest } from '../api/serviceRequests';\r\nimport type { ServiceRequest } from '../types/serviceRequest';\r\nimport { mockServiceRequests } from '../mocks/serviceRequests';\r\n\r\nexport const ServiceRequestDetailsPage: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n  \r\n  const [request, setRequest] = useState<ServiceRequest | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showBoostModal, setShowBoostModal] = useState(false);\r\n  const [boosting, setBoosting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchRequest = async () => {\r\n      if (!id) return;\r\n      \r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Use mock data for development\r\n        const mockRequest = mockServiceRequests.find(r => r.id === id);\r\n        \r\n        if (mockRequest) {\r\n          setRequest(mockRequest);\r\n        } else {\r\n          // In production: const data = await getRequestById(id);\r\n          throw new Error('Request not found');\r\n        }\r\n      } catch (error) {\r\n        // Handle request fetch error\r\n        alert('Request not found');\r\n        navigate('/dashboard');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRequest();\r\n  }, [id, navigate]);\r\n\r\n  const handleBoostPrice = async (newPrice: number) => {\r\n    if (!request) return;\r\n    \r\n    try {\r\n      setBoosting(true);\r\n      \r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Update request with new price\r\n      const updatedRequest: ServiceRequest = {\r\n        ...request,\r\n        currentPrice: newPrice,\r\n        status: 'price_boosted',\r\n        priceHistory: [\r\n          ...request.priceHistory,\r\n          { price: newPrice, timestamp: new Date().toISOString() }\r\n        ],\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n      \r\n      setRequest(updatedRequest);\r\n      setShowBoostModal(false);\r\n      \r\n      // In production: const result = await boostRequestPrice(request.id, newPrice);\r\n      // setRequest(result);\r\n      \r\n      alert('Price boosted successfully! Your request is now more attractive to service providers.');\r\n    } catch (error) {\r\n      // Handle price boost error\r\n      alert('Failed to boost price. Please try again.');\r\n    } finally {\r\n      setBoosting(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelRequest = async () => {\r\n    if (!request) return;\r\n    \r\n    if (!window.confirm('Are you sure you want to cancel this request?')) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      // In production: await cancelRequest(request.id);\r\n      \r\n      alert('Request cancelled successfully');\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      // Handle request cancellation error\r\n      alert('Failed to cancel request. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 dark:bg-slate-900 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-16 h-16 border-4 border-primary-600 border-t-transparent rounded-full animate-spin mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600 dark:text-gray-400\">Loading request...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!request) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 dark:bg-slate-900 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-gray-600 dark:text-gray-400\">Request not found</p>\r\n          <Link to=\"/dashboard\" className=\"text-primary-600 hover:underline mt-2 inline-block\">\r\n            Return to Dashboard\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const canBoostPrice = request.type === 'instant' && \r\n    ['pending', 'price_boosted'].includes(request.status);\r\n  \r\n  const canCancel = ['pending', 'price_boosted'].includes(request.status);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-slate-900\">\r\n      {/* Header */}\r\n      <div className=\"bg-white dark:bg-slate-800 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"max-w-6xl mx-auto px-4 py-6\">\r\n          <div className=\"flex items-center gap-4 mb-4\">\r\n            <button\r\n              onClick={() => navigate(-1)}\r\n              className=\"text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n              </svg>\r\n            </button>\r\n            <div className=\"flex-1\">\r\n              <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                {request.categoryName} Request\r\n              </h1>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                Request ID: {request.id}\r\n              </p>\r\n            </div>\r\n            {canBoostPrice && (\r\n              <button\r\n                onClick={() => setShowBoostModal(true)}\r\n                className=\"px-6 py-2 rounded-lg bg-orange-600 text-white font-medium hover:bg-orange-700 transition-colors\"\r\n              >\r\n                Boost Price\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"max-w-6xl mx-auto px-4 py-8\">\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n          {/* Main Content */}\r\n          <div className=\"lg:col-span-2 space-y-6\">\r\n            {/* Request Details */}\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              className=\"bg-white dark:bg-slate-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\"\r\n            >\r\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                Request Details\r\n              </h2>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"text-sm text-gray-500 dark:text-gray-400\">Description</label>\r\n                  <p className=\"text-gray-900 dark:text-white mt-1\">{request.description}</p>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"text-sm text-gray-500 dark:text-gray-400\">Type</label>\r\n                    <p className=\"text-gray-900 dark:text-white mt-1 capitalize\">\r\n                      {request.type === 'instant' ? (\r\n                        <span className=\"inline-flex items-center gap-1\">\r\n                          <span className=\"w-2 h-2 rounded-full bg-purple-500\"></span>\r\n                          Instant Service\r\n                        </span>\r\n                      ) : (\r\n                        <span className=\"inline-flex items-center gap-1\">\r\n                          <span className=\"w-2 h-2 rounded-full bg-blue-500\"></span>\r\n                          Scheduled Service\r\n                        </span>\r\n                      )}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"text-sm text-gray-500 dark:text-gray-400\">Created</label>\r\n                    <p className=\"text-gray-900 dark:text-white mt-1\">\r\n                      {new Date(request.createdAt).toLocaleString()}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"text-sm text-gray-500 dark:text-gray-400\">Current Price</label>\r\n                    <p className=\"text-2xl font-bold text-primary-600 dark:text-primary-400 mt-1\">\r\n                      ${request.currentPrice.toFixed(2)}\r\n                    </p>\r\n                    {request.currentPrice > request.initialPrice && (\r\n                      <p className=\"text-sm text-orange-600 dark:text-orange-400\">\r\n                        (Originally ${request.initialPrice.toFixed(2)})\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n\r\n                  {request.type === 'instant' && request.broadcastRadius && (\r\n                    <div>\r\n                      <label className=\"text-sm text-gray-500 dark:text-gray-400\">Broadcast Radius</label>\r\n                      <p className=\"text-gray-900 dark:text-white mt-1\">{request.broadcastRadius} km</p>\r\n                    </div>\r\n                  )}\r\n\r\n                  {request.type === 'scheduled' && request.scheduledDate && (\r\n                    <div>\r\n                      <label className=\"text-sm text-gray-500 dark:text-gray-400\">Scheduled For</label>\r\n                      <p className=\"text-gray-900 dark:text-white mt-1\">\r\n                        {new Date(request.scheduledDate).toLocaleDateString()}\r\n                      </p>\r\n                      {request.scheduledTimeSlot && (\r\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                          {request.scheduledTimeSlot}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"text-sm text-gray-500 dark:text-gray-400\">Location</label>\r\n                  <p className=\"text-gray-900 dark:text-white mt-1\">{request.buyerLocation.address}</p>\r\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                    Coordinates: {request.buyerLocation.lat.toFixed(4)}, {request.buyerLocation.lng.toFixed(4)}\r\n                  </p>\r\n                </div>\r\n\r\n                {request.acceptedBy && (\r\n                  <div className=\"p-4 rounded-lg bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800\">\r\n                    <div className=\"flex items-start gap-2\">\r\n                      <svg className=\"w-5 h-5 text-green-600 dark:text-green-400 mt-0.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\r\n                      </svg>\r\n                      <div>\r\n                        <p className=\"font-medium text-green-900 dark:text-green-300\">\r\n                          Request Accepted\r\n                        </p>\r\n                        <p className=\"text-sm text-green-700 dark:text-green-400 mt-1\">\r\n                          Provider ID: {request.acceptedBy}\r\n                          {request.acceptedAt && (\r\n                            <span className=\"ml-2\">\r\n                              • Accepted {new Date(request.acceptedAt).toLocaleString()}\r\n                            </span>\r\n                          )}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </motion.div>\r\n\r\n            {/* Messages/Chat Placeholder */}\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ delay: 0.1 }}\r\n              className=\"bg-white dark:bg-slate-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\"\r\n            >\r\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                Messages\r\n              </h2>\r\n              <div className=\"text-center py-12 text-gray-500 dark:text-gray-400\">\r\n                <svg className=\"w-16 h-16 mx-auto mb-4 opacity-50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\r\n                </svg>\r\n                <p className=\"text-sm\">Messaging feature coming soon</p>\r\n                <p className=\"text-xs mt-1\">You'll be able to chat with service providers here</p>\r\n              </div>\r\n            </motion.div>\r\n          </div>\r\n\r\n          {/* Sidebar */}\r\n          <div className=\"lg:col-span-1 space-y-6\">\r\n            {/* Timeline */}\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ delay: 0.2 }}\r\n            >\r\n              <RequestStatusTimeline request={request} />\r\n            </motion.div>\r\n\r\n            {/* Actions */}\r\n            {canCancel && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.3 }}\r\n                className=\"bg-white dark:bg-slate-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\"\r\n              >\r\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                  Actions\r\n                </h3>\r\n                <button\r\n                  onClick={handleCancelRequest}\r\n                  className=\"w-full px-4 py-3 rounded-lg border-2 border-red-300 dark:border-red-600 text-red-600 dark:text-red-400 font-medium hover:bg-red-50 dark:hover:bg-red-900/20 transition-colors\"\r\n                >\r\n                  Cancel Request\r\n                </button>\r\n              </motion.div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Boost Price Modal */}\r\n      {request && (\r\n        <PriceBoostModal\r\n          isOpen={showBoostModal}\r\n          onClose={() => setShowBoostModal(false)}\r\n          currentPrice={request.currentPrice}\r\n          onConfirm={handleBoostPrice}\r\n          loading={boosting}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"names":["statusOrder","RequestStatusTimeline","request","steps","currentStatusIndex","indexOf","status","map","index","timestamp","createdAt","acceptedAt","label","getStatusLabel","active","completed","getSteps","formatTimestamp","Date","toLocaleString","month","day","hour","minute","isSpecialStatus","includes","jsxs","className","children","jsx","motion","div","initial","opacity","y","animate","fill","viewBox","fillRule","d","clipRule","currentPrice","toFixed","step","isLast","length","height","priceHistory","entry","price","pending","price_boosted","converted_to_scheduled","accepted","in_progress","cancelled","expired","ServiceRequestDetailsPage","id","useParams","navigate","useNavigate","setRequest","useState","loading","setLoading","showBoostModal","setShowBoostModal","boosting","setBoosting","useEffect","async","mockRequest","mockServiceRequests","find","r","Error","error","alert","fetchRequest","Link","to","canBoostPrice","type","canCancel","onClick","stroke","strokeLinecap","strokeLinejoin","strokeWidth","categoryName","description","initialPrice","broadcastRadius","scheduledDate","toLocaleDateString","scheduledTimeSlot","buyerLocation","address","lat","lng","acceptedBy","transition","delay","window","confirm","Promise","resolve","setTimeout","PriceBoostModal","isOpen","onClose","onConfirm","newPrice","updatedRequest","toISOString","updatedAt"],"mappings":"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"}